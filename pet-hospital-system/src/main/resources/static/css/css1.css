
*{
    margin: 0;
    padding: 0;
/*    全局设置为0内外边距*/
}

:root{
    /*:root是指文档的根元素，在其中定义的变量可作为全局变量*/
    /*可以理解为 c语言 在main函数，定义的全局变量*/
    --color-menu-bg: #fdb095;
    --font-color-mi: #fdb095;
    --font-color-mi-hover: #fdb095;
    --color-bg-mi-hover: #fdb095;
    --border-radius-mi:2px;
    --transition-menu-time: 0.2s;
    --color-line-bg: #fdb095;
    --color-zidingyi:#fdb095;
}

.content{
    background-color: #fdb095;
    min-height: 100vh;
}

.menu-box{
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Sans', Arial, sans-serif;
    letter-spacing: 0.5px;
    /*设置字母之间的间距*/
    font-weight: 600;
    position: relative;
    width: fit-content;
    /* fit-content 作用: 根据内容自适应宽度 可以结合margin-auto 来实现居中*/
    min-height: 100vh;
    /*浏览器可见视口【高度】的百分比（1vh代表视窗【高度】的1%）*/
    padding: 6px 12px;
    box-sizing: border-box;
    /*border-box是指将边框border和内边距padding在现有元素的宽度和高度内设置*/
    /*background-color: var(--color-menu-bg);*/
    background-color:#65C0BB;
}

.menu-box input[type='checkbox'] {
    display: none;
    /*隐藏原生的多选框*/
}

.menu-box>label{
    position: absolute;
    top: 48%;
    right: 0;
    transform: translateX(50%);
    /*从右侧0点向右移动自身宽度的50%*/
    width: 20px;
    height: 20px;
    border-radius: 20px;
    box-shadow: 0px 0px 4px 0px #000000;
    background-color: var(--color-menu-bg);
    color: var(--font-color-mi);
    display: flex;
    /*需要垂直居中显示文本*/
    justify-content: center;
    /*justify-content 用于设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。*/
    /*这里要注意一点  Internet Explorer 和 Safari 浏览器不支持 justify-content 属性。*/
    align-items: center;
    overflow: hidden;
}

/*

css中“>”是css3特有的子元素选择器，A>B表示选择A元素的所有子B元素。
eg： 如果您希望选择只作为 h1 元素子元素的 strong 元素，可以这样写：    h1 > strong {color:red;}
会把第一个 h1 下面的两个 strong 元素变为红色，但是第二个 h1 中的 strong 不受影响：

*/

.menu-box>label>i{
    font-weight: 900;
    text-indent: -3px;
    /* text-indent属性规定文本块中首行文本的缩进。*/
    font-size: 20px;
    transition: transform var(--transition-menu-time);
    transform: rotate(0deg);
/*    rotate(angle)	定义 2D 旋转，在参数中规定角度。*/
}

/*
A+B{}这个+是选择相邻兄弟，称作“相邻兄弟选择器”，如果需要选择紧接在另一个元素后的元素，而且二者有相同的父元素，
可以使用相邻兄弟选择器，例如，如果要增加紧接在 h1 元素后出现的段落的上边距，可以这样写：
　　h1 + p {margin-top:50px;}
　　这个选择器读作：“选择紧接在 h1 元素后出现的段落，h1 和 p 元素拥有共同的父元素”。｝；
*/

.menu-box>label:hover{
    box-shadow: 0px 0px 2px 0px #000000;
    color: var(--font-color-mi);
}

.menu-box>input#menu-btn:checked+label>i{
    transform: rotate(180deg);
}

.menu{
    font-size: 18px;
    width: 250px;
    min-height: 100%;
    cursor: pointer;
    overflow: hidden;
    transition: width var(--transition-menu-time);
    color: var(--font-color-mi);
}

/*
    A~B 选择前面有A元素的每个 B 元素，即选择 A 之后出现的所有 B，两种元素必须拥有相同的父元素，但 B 不必紧随 A。
*/

.menu-box > input#menu-btn:checked ~ .menu{
    width: 0;
}

.menu-title{
    text-align: center;
    margin-bottom: 10px;
}

.menu-item>label{
    position: relative;
    display: flex;
    width: 100%;
    height: 50px;
    border-radius: var(--border-radius-mi);
    align-items: center;
}

.menu-item>label:hover{
var(--color-bg-mi-hover);
}

.menu-item>label>i:first-child{
    flex: none;
    margin-right: 6px;
    font-size: 24px;
}

.menu-item>label>span{
    flex: 1;
}

.menu-item>label>i:last-child{
    flex: none;
    font-size: 20px;
    font-weight: 900;
    transform: rotate(0deg);
    transition: transform var(--transition-menu-time);
}

.menu-item>input:checked+label>i:last-child{
    transform: rotate(180deg);
}

.menu-content{
    height: 0;
    overflow: hidden;
    /*清除浮动*/
    transition: height var(--transition-menu-time);
    display: flex;
    /*规定弹性项目会在需要时换行。*/
    flex-wrap: wrap;
    background-color: var(--color-zidingyi);
}

.menu-item > input#menu-item1:checked~.menu-content{
    height: calc(3 * 40px);
/*    三行，每一行高度为40px*/
}

.menu-item>input#menu-item2:checked~.menu-content{
    height: calc(2 * 40px);
}

.menu-item>input#menu-item3:checked~.menu-content{
    height: calc(3 * 40px);
}

.menu-content>span{
    width: 100%;
    text-indent: 20px;
    line-height: 40px;
    border-radius: var(--border-radius-mi);
}

.menu-content>span:hover{
    background-color: var(--color-bg-mi-hover);
    color:var(--color-bg-mi-hover);
}

.set-line {
    margin: 20px 0 10px 0;
    width: 100%;
    height: 2px;
    background-color: var(--color-line-bg);
}


